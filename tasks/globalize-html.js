// Generated by CoffeeScript 1.6.3
(function() {
  var fs, globalize, handlebars, mkdir, path, walk;

  fs = require("fs");

  path = require("path");

  handlebars = require("handlebars");

  walk = require("../walk");

  mkdir = function(path) {
    if (!fs.existsSync(path)) {
      return fs.mkdirSync(path);
    }
  };

  globalize = function(resDir, srcDir, destDir) {
    var destDirPath, destFilePath, html, resBaseName, resData, resDataStr, resFile, resFilePath, resFiles, srcFileName, srcFilePath, srcFilesPaths, template, templateFile, _i, _len, _results;
    resFiles = fs.readdirSync(resDir);
    srcFilesPaths = walk(srcDir);
    _results = [];
    for (_i = 0, _len = resFiles.length; _i < _len; _i++) {
      resFile = resFiles[_i];
      resBaseName = path.basename(resFile, '.json');
      resFilePath = path.join(resDir, resFile);
      resDataStr = fs.readFileSync(resFilePath);
      resData = JSON.parse(resDataStr);
      _results.push((function() {
        var _j, _len1, _results1;
        _results1 = [];
        for (_j = 0, _len1 = srcFilesPaths.length; _j < _len1; _j++) {
          srcFilePath = srcFilesPaths[_j];
          templateFile = fs.readFileSync(srcFilePath, 'utf8');
          template = handlebars.compile(templateFile);
          html = template(resData);
          destDirPath = path.join(destDir, resBaseName, path.relative(srcDir, path.dirname(srcFilePath)));
          srcFileName = path.basename(srcFilePath);
          destFilePath = path.join(destDirPath, srcFileName);
          mkdir(destDirPath);
          _results1.push(fs.writeFileSync(destFilePath, html));
        }
        return _results1;
      })());
    }
    return _results;
  };

  module.exports.globalize = globalize;

  return;

  module.exports = function(grunt) {
    return grunt.registerMultiTask('globalize-html', 'Plugin to globalize html files, using handlebars templates and resources stored in .json files', function() {
      var opts;
      opts = grunt.config('globalize-html.build');
      globalize(opts.resDir, opts.srcDir, opts.destDir);
      return grunt.log.writeln('HTMLs were globalized');
    });
  };

}).call(this);

/*
//@ sourceMappingURL=globalize-html.map
*/
